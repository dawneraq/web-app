<section class="search">
  <label for="search" class="search__label">Look up a definition</label>
  <div class="search__actions">
    <input type="search" id="search" class="search__input" name="search" />
    <button type="button" class="search__button">Search</button>
  </div>

  <ul id="search-results-list" class="u-no-padding-left list" aria-labelledby="search" />
</section>

{% block pageScript%}
<script>
  function getAllOccurrences(str, match) {
    const matchLength = match.length;
    const indices = []
    let startIndex = 0, index

    str = str.toLowerCase();
    match = match.toLowerCase();

    while ((index = str.indexOf(match, startIndex)) > -1) {
        indices.push(index);
        startIndex = index + matchLength;
    }

    return indices.map(index => {
      // this needs some cleaning up
      // currently there are edge cases that break the selection of the substring
      const start = index < 50 ? index : index - 50;
      const end = matchLength + 100;
      const exerpt = str.substr(start, end)

      return exerpt.replace(match, `<span class="search-results-list__list-item__highlight">${match}</span>`)
    })
  }

  // don't use es6+ here because it will not be transpiled
  window.addEventListener('DOMContentLoaded', function() {
    function buildResultListItem(result, search) {
      const occurrences = getAllOccurrences(result.content, search)
      return `<h4>${result.title}</h4>${occurrences.map(occurrence => `<p>...${occurrence}...</p>`).join('')}`
    }

    try {
      const $search = document.querySelector('#search')
      const $resultsContainer = document.querySelector('#search-results-list')

      $search.addEventListener('change', async event => {
        const value = event.target.value

        if (!value) {
          $resultsContainer.innerHTML = ''
          return
        }

        const matches = await fetch(`https://climb-phi-staging.begin.app/self-defined-app-search?q=${value}`, {mode: 'cors'})
        const results = await matches.json()

        $resultsContainer.innerHTML = ''

        // better to create a fragment here
        results.forEach((result) => {
          let $childElement = document.createElement('li')
          $childElement.classList.add('search-results-list__list-item')
          $childElement.innerHTML = buildResultListItem(result, value)
          $resultsContainer.appendChild($childElement)
        })

      })
    } catch (error) {
      console.log('error in search!', error)
    }


  })
</script>
{% endblock %}
